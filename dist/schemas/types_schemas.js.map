{"version":3,"sources":["../../src/schemas/types_schemas.js"],"names":["Person","GraphQLObjectType","name","description","fields","id","type","GraphQLID","firstName","GraphQLNonNull","GraphQLString","lastName","isMarried","GraphQLBoolean","HobbyType","title","user","UserType","resolve","parent","User","findById","userId","PostType","comment","creation","GraphQLDateTime","age","GraphQLInt","profession","posts","GraphQLList","logger","info","Post","find","where","equals","hobbies","Hobby"],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;;AAGO,GAAMA,CAAAA,MAAM,CAAG,GAAIC,2BAAJ,CAAsB;AAC1CC,IAAI,CAAE,QADoC;AAE1CC,WAAW,CAAE,0BAF6B;AAG1CC,MAAM,CAAE,wBAAO;AACbC,EAAE,CAAE,CAAEC,IAAI,CAAEC,kBAAR,CADS;AAEbC,SAAS,CAAE,CAAEF,IAAI,CAAE,GAAIG,wBAAJ,CAAmBC,sBAAnB,CAAR,CAFE;AAGbC,QAAQ,CAAE,CAAEL,IAAI,CAAEI,sBAAR,CAHG;AAIbE,SAAS,CAAE,CAAEN,IAAI,CAAEO,uBAAR,CAJE,CAAP,CAHkC,CAAtB,CAAf;;;;AAWP;;;AAGO,GAAMC,CAAAA,SAAS,CAAG,GAAIb,2BAAJ,CAAsB;AAC7CC,IAAI,CAAE,OADuC;AAE7CC,WAAW,CAAE,+CAFgC;AAG7CC,MAAM,CAAE,wBAAO;AACbC,EAAE,CAAE;AACFC,IAAI,CAAEC,kBADJ;AAEFJ,WAAW,CAAE,uBAFX,CADS;;AAKbY,KAAK,CAAE;AACLT,IAAI,CAAE,GAAIG,wBAAJ,CAAmBC,sBAAnB,CADD;AAELP,WAAW,CAAE,mBAFR,CALM;;AASbA,WAAW,CAAE;AACXG,IAAI,CAAEI,sBADK;AAEXP,WAAW,CAAE,yBAFF,CATA;;AAaba,IAAI,CAAE;AACJV,IAAI,CAAEW,QADF;AAEJC,OAFI,kBAEIC,CAFJ,CAEY;AACd,MAAOC,kBAAKC,QAAL,CAAcF,CAAM,CAACG,MAArB,CAAP;AACD,CAJG,CAbO,CAAP,CAHqC,CAAtB,CAAlB;;;;;AAyBP;;;AAGO,GAAMC,CAAAA,QAAQ,CAAG,GAAItB,2BAAJ,CAAsB;AAC5CC,IAAI,CAAE,MADsC;AAE5CC,WAAW,CAAE,+CAF+B;AAG5CC,MAAM,CAAE,wBAAO;AACbC,EAAE,CAAE;AACFC,IAAI,CAAEC,kBADJ;AAEFJ,WAAW,CAAE,qBAFX,CADS;;AAKbqB,OAAO,CAAE;AACPlB,IAAI,CAAE,GAAIG,wBAAJ,CAAmBC,sBAAnB,CADC;AAEPP,WAAW,CAAE,8BAFN,CALI;;AASbsB,QAAQ,CAAE;AACRnB,IAAI,CAAE,GAAIG,wBAAJ,CAAmBiB,+BAAnB,CADE;AAERvB,WAAW,CAAE,oCAFL,CATG;;AAaba,IAAI,CAAE;AACJV,IAAI,CAAEW,QADF;AAEJC,OAFI,kBAEIC,CAFJ,CAEY;AACd,MAAOC,kBAAKC,QAAL,CAAcF,CAAM,CAACG,MAArB,CAAP;AACD,CAJG,CAbO,CAAP,CAHoC,CAAtB,CAAjB;;;;;AAyBP;;;AAGO,GAAML,CAAAA,QAAQ,CAAG,GAAIhB,2BAAJ,CAAsB;AAC5CC,IAAI,CAAE,MADsC;AAE5CC,WAAW,CAAE,uBAF+B;AAG5CC,MAAM,CAAE,wBAAO;AACbC,EAAE,CAAE,CAAEC,IAAI,CAAEC,kBAAR,CAAmBJ,WAAW,YAA9B,CADS;AAEbD,IAAI,CAAE;AACJI,IAAI,CAAE,GAAIG,wBAAJ,CAAmBC,sBAAnB,CADF;AAEJP,WAAW,CAAE,qCAFT,CAFO;;AAMbwB,GAAG,CAAE;AACHrB,IAAI,CAAEsB,mBADH;AAEHzB,WAAW,CAAE,0CAFV,CANQ;;AAUb0B,UAAU,CAAE,CAAEvB,IAAI,CAAE,GAAIG,wBAAJ,CAAmBC,sBAAnB,CAAR,CAVC;AAWboB,KAAK,CAAE;AACLxB,IAAI,CAAE,GAAIyB,qBAAJ,CAAgBR,QAAhB,CADD;AAELL,OAFK,kBAEGC,CAFH,CAEW;;AAEd,MADAa,mBAAOC,IAAP,CAAY,yBAA2Bd,CAAM,CAACd,EAA9C,CACA,CAAO6B,iBAAKC,IAAL;AACJC,KADI,CACE,QADF;AAEJC,MAFI,CAEGlB,CAAM,CAACd,EAFV,CAAP;AAGD,CAPI,CAXM;;AAoBbiC,OAAO,CAAE;AACPhC,IAAI,CAAE,GAAIyB,qBAAJ,CAAgBjB,SAAhB,CADC;AAEPI,OAFO,kBAECC,CAFD,CAES;;AAEd,MADAa,mBAAOC,IAAP,CAAY,2BAA6Bd,CAAM,CAACd,EAAhD,CACA,CAAOkC,kBAAMJ,IAAN;AACJC,KADI,CACE,QADF;AAEJC,MAFI,CAEGlB,CAAM,CAACd,EAFV,CAAP;AAGD,CAPM,CApBI,CAAP,CAHoC,CAAtB,CAAjB,C","sourcesContent":["import logger from 'loggy'\nimport {\n  GraphQLObjectType,\n  GraphQLID,\n  GraphQLString,\n  GraphQLList,\n  GraphQLInt,\n  GraphQLNonNull,\n  GraphQLBoolean\n} from 'graphql'\n\nimport {\n  GraphQLDateTime\n} from 'graphql-iso-date'\n\nimport User from '../model/User'\nimport Post from '../model/Post'\nimport Hobby from '../model/Hobby'\n\n/**\n *\n */\nexport const Person = new GraphQLObjectType({\n  name: 'Person',\n  description: 'Represents a person type',\n  fields: () => ({\n    id: { type: GraphQLID },\n    firstName: { type: new GraphQLNonNull(GraphQLString) },\n    lastName: { type: GraphQLString },\n    isMarried: { type: GraphQLBoolean }\n  })\n})\n\n/**\n *\n */\nexport const HobbyType = new GraphQLObjectType({\n  name: 'Hobby',\n  description: 'What a pleasure to have a great hobby in life',\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      description: 'The type of the hobby'\n    },\n    title: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: \"The hobby's title\"\n    },\n    description: {\n      type: GraphQLString,\n      description: \"The hobby's description\"\n    },\n    user: {\n      type: UserType,\n      resolve(parent) {\n        return User.findById(parent.userId)\n      }\n    }\n  })\n})\n\n/**\n *\n */\nexport const PostType = new GraphQLObjectType({\n  name: 'Post',\n  description: 'This is a post the we can share between users',\n  fields: () => ({\n    id: {\n      type: GraphQLID,\n      description: \"The type of post'id\"\n    },\n    comment: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The core content of the post'\n    },\n    creation: {\n      type: new GraphQLNonNull(GraphQLDateTime),\n      description: 'The date and time of post creation'\n    },\n    user: {\n      type: UserType,\n      resolve(parent) {\n        return User.findById(parent.userId)\n      }\n    }\n  })\n})\n\n/**\n *\n */\nexport const UserType = new GraphQLObjectType({\n  name: 'User',\n  description: 'Description of a User',\n  fields: () => ({\n    id: { type: GraphQLID, description: `User's id` },\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: \"The name of the user. Can't be null\"\n    },\n    age: {\n      type: GraphQLInt,\n      description: 'Yes, it is actually the age of te user !'\n    },\n    profession: { type: new GraphQLNonNull(GraphQLString) },\n    posts: {\n      type: new GraphQLList(PostType),\n      resolve(parent) {\n        logger.info('Looking for posts for ' + parent.id)\n        return Post.find()\n          .where('userId')\n          .equals(parent.id)\n      }\n    },\n    hobbies: {\n      type: new GraphQLList(HobbyType),\n      resolve(parent) {\n        logger.info('Looking for hobbies for ' + parent.id)\n        return Hobby.find()\n          .where('userId')\n          .equals(parent.id)\n      }\n    }\n  })\n})\n"],"file":"types_schemas.js"}