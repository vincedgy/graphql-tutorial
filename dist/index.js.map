{"version":3,"sources":["../src/index.js"],"names":["app","use","graphiql","schema","err","req","res","next","logger","error","stack","headersSent","status","render","info","mongoose","connect","process","env","MONGODB_HOST","MONGODB_NAME","mongoConfig","connection","on","log","listen"],"mappings":";;;;;;;;;AASA,GAAMA,CAAAA,GAAG,CAAG,yBAAZ;;AAEA;AACAA,GAAG;AACAC,GADH,CACO,sBADP;AAEGA,GAFH;AAGI,UAHJ;AAII,+BAAQ;AACNC,QAAQ,GADF;AAENC,MAAM,CAAEA,kBAFF,CAAR,CAJJ;;;AASGF,GATH,CASO,SAASG,CAAT,CAAcC,CAAd,CAAmBC,CAAnB,CAAwBC,CAAxB,CAA8B;AACjCC,kBAAOC,KAAP,CAAaL,CAAG,CAACM,KAAjB,CADiC;AAE7BJ,CAAG,CAACK,WAFyB;AAGxBJ,CAAI,CAACH,CAAD,CAHoB;;AAKjCE,CAAG,CAACM,MAAJ,CAAW,GAAX,CALiC;AAMjCN,CAAG,CAACO,MAAJ,CAAW,OAAX,CAAoB,CAAEJ,KAAK,CAAEL,CAAT,CAApB,CANiC;AAOlC,CAhBH,C;;AAkBAI,kBAAOM,IAAP,CAAY,aAAZ,C;;;AAGAC;AACGC,OADH;AAEI;AACEC,OAAO,CAACC,GAAR,CAAYC,YADd;AAEE,GAFF;AAGEF,OAAO,CAACC,GAAR,CAAYE,YAHd;AAIE,8BANN;AAOMC,iBAPN;;AASS,SAAAjB,CAAG,CAAI;AACZI,kBAAOC,KAAP,CAAa,iCAAb,CAAgDL,CAAhD,CADY;AAEb,CAXH,C;;;AAcAW,qBAASO,UAAT,CAAoBC,EAApB,CAAuB,MAAvB,CAA+B,UAAM;;AAEnC;AADAf,kBAAOgB,GAAP,qCAAwCP,OAAO,CAACC,GAAR,CAAYE,YAApD,gBAAuEH,OAAO,CAACC,GAAR,CAAYC,YAAnF,EADmC,CAGnCnB,GAAG,CAACyB,MAAJ,CAAW,GAAX,CAAiB,UAAM;AACrBjB,kBAAOM,IAAP,CAAY,uDAAZ,CADqB;AAEtB,CAFD,CAHmC;AAMpC,CAND,C;;AAQed,G","sourcesContent":["import 'dotenv/config'\nimport mongoConfig from './mongo'\nimport express from 'express'\nimport cors from 'cors'\nimport logger from 'loggy'\nimport graphql from 'express-graphql'\nimport mongoose from 'mongoose'\nimport schema from './schemas/schema'\n\nconst app = express()\n\n// Declare app\napp\n  .use(cors())\n  .use(\n    '/graphql',\n    graphql({\n      graphiql: true,\n      schema: schema\n    })\n  )\n  .use(function(err, req, res, next) {\n    logger.error(err.stack)\n    if (res.headersSent) {\n      return next(err)\n    }\n    res.status(500)\n    res.render('error', { error: err })\n  })\n\nlogger.info('Starting...')\n\n// Open the connection to database\nmongoose\n  .connect(\n    'mongodb+srv://' +\n      process.env.MONGODB_HOST +\n      '/' +\n      process.env.MONGODB_NAME +\n      '?retryWrites=true&w=majority',\n      mongoConfig\n  )\n  .catch(err => {\n    logger.error('Error during mongoDB connection', err)\n  })\n\n// Listen to connection 'open' event\nmongoose.connection.on('open', () => {\n  logger.log(`Now connected to database ${process.env.MONGODB_NAME} on ${process.env.MONGODB_HOST}`)\n  // Run app\n  app.listen(4000, () => {\n    logger.info('Server is running on [http://localhost:4000/graphql].')\n  })\n})\n\nexport default app"],"file":"index.js"}